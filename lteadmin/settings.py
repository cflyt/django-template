# coding=utf-8

"""
Django settings for lteadmin project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

print os.path.abspath(__file__), os.path.dirname(os.path.abspath(__file__))
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print 'base dir: ', BASE_DIR


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g!*lu021!*lrk*&8hr-etf(kr0xp-h^sk$%vh50dceoh)7u*q+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*', ]


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # third_app
    'mptt',
    'rest_framework',
    'django_js_reverse',

    # my_app
    #'core',
    'core.adminlte',
    'core.registration',
    'core.messageset',
    'core.organization'

)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',

    'django.middleware.locale.LocaleMiddleware',

    'core.adminlte.middleware.ApiPermissionCheck',
    'core.adminlte.middleware.MenuMiddleware'
)

ROOT_URLCONF = 'lteadmin.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        #'DIRS': [os.path.join(BASE_DIR, 'core')],
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media'
            ],
        },
    },
]

WSGI_APPLICATION = 'lteadmin.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        #'NAME': os.path.join(BASE_DIR, 'conf', 'db.sqlite3'),
        'NAME': os.path.join('conf', 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

DATETIME_FORMAT = '%Y-%m-%d %H:%M:%S'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

if not DEBUG:
    STATIC_ROOT = os.path.join('var/www', 'static/')


MEDIA_ROOT = os.path.join('var/www', 'media')

MEDIA_URL = '/media/'

LOGIN_URL = '/auth/login/'

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        # 'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework.filters.DjangoFilterBackend',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS':
        'core.adminlte.pagination.CommonPageNumberPagination',
    'PAGE_SIZE': 10,
    'DATETIME_FORMAT': '%Y-%m-%d %H:%M:%S',
    'DATETIME_INPUT_FORMATS': ('%Y-%m-%d %H:%M:%S',),
    'DATE_FORMAT': '%Y-%m-%d',
    'DATE_INPUT_FORMATS': ('%Y-%m-%d',),
    'TIME_FORMAT': '%H:%M:%S',
    'TIME_INPUT_FORMATS': ('%H:%M:%S',),
    'LANGUAGES': (
        ('zh-hans', 'Simplified Chinese'),
    ),
    'LANGUAGE_CODE': 'zh-hans',
    # 'LANGUAGE_CODE': 'zh-hans',
    'NON_FIELD_ERRORS_KEY': 'detail',
}

LOGGING = {
'version': 1,
'disable_existing_loggers': False,
'formatters': {
    'standard': {
        'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'}  #日志格式
},
'filters': {
},
'handlers': {
    'mail_admins': {
        'level': 'ERROR',
        'class': 'django.utils.log.AdminEmailHandler',
        'include_html': True,
        },
    'default': {
        'level':'DEBUG',
        #'class':'logging.handlers.RotatingFileHandler',
        'class':'logging.FileHandler',
        'filename': 'var/log/root.log',                #日志输出文件
        #'maxBytes': 1024*1024*5,                  #文件大小
        'formatter':'standard',                   #使用哪种formatters日志格式
    },
    'error': {
        'level':'ERROR',
        'class':'logging.handlers.RotatingFileHandler',
        'filename': 'var/log/django.error.log',
        'maxBytes':1024*1024*5,
        'backupCount': 5,
        'formatter':'standard',
        },
    'console':{
        'level': 'DEBUG',
        'class': 'logging.StreamHandler',
        'formatter': 'standard'
    },
    'request_handler': {
        'level':'DEBUG',
        'class':'logging.handlers.RotatingFileHandler',
        'filename': 'var/log/script.log',
        'maxBytes': 1024*1024*5,
        'backupCount': 5,
        'formatter':'standard',
        },
    'scprits_handler': {
        'level':'DEBUG',
        #'class':'logging.handlers.RotatingFileHandler',
        'class':'logging.FileHandler',
        'filename':'var/log/script.log',
        #'backupCount': 5,
        #'maxBytes': 1024*1024*5,
        'formatter':'standard',
        }
},

'root': {
        'handlers': ['default','error', 'console' ],
        'level': 'DEBUG',
    },


'loggers': {
    'django': {
        'handlers': ['default', 'console'],
        'level': 'DEBUG',
        #'propagate': False
    },
    'django.request': {
        'handlers': ['request_handler'],
        'level': 'DEBUG',
        'propagate': False,
        },
    'scripts': {
        'handlers': ['scprits_handler'],
        'level': 'DEBUG',
        'propagate': False
    },
    'blog.views': {
        'handlers': ['default', 'error'],
        'level': 'DEBUG',
        'propagate': True
    },
  }
}
